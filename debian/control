Source: usercouch
Section: python
Priority: optional
Maintainer: Jason Gerard DeRose <jderose@novacut.com>
Build-Depends: debhelper (>= 9),
    python3-all (>= 3.3),
    python3-sphinx,
    python3-dbase32 (>= 0.10),
    python3-degu (>= 0.2),
    couchdb-bin (>= 1.5.0),
    openssl,
Standards-Version: 3.9.4
X-Python3-Version: >= 3.3
Homepage: https://launchpad.net/usercouch

Package: python3-usercouch
Architecture: all
Depends: ${python3:Depends}, ${misc:Depends},
    python3-dbase32 (>= 0.10),
    python3-degu (>= 0.2),
    couchdb-bin (>= 1.5.0),
    openssl,
Suggests: python3-microfiber, python3-usercouch-doc
Description: starts per-user CouchDB instances for fun, profit, unit testing
 UserCouch is a Python3 library for starting per-user CouchDB instances,
 including throw-away instances for unit testing. It's easy:
 .
 from usercouch.misc import TempCouch
 from microfiber import Database
 tmp = TempCouch()
 env = tmp.bootstrap()
 db = Database('mydb', env)
 db.put(None)  # Create the database
 db.post({'_id': 'mydoc'})  # Create a document
 .
 Also see Microfiber: https://launchpad.net/microfiber

Package: python3-usercouch-doc
Architecture: all
Section: doc
Depends: ${sphinxdoc:Depends}, ${misc:Depends}
Suggests: python3-usercouch
Description: documentation for python3-usercouch
 UserCouch is a Python3 library for starting per-user CouchDB instances,
 including throw-away instances for unit testing. It's easy:
 .
 from usercouch.misc import TempCouch
 from microfiber import Database
 tmp = TempCouch()
 env = tmp.bootstrap()
 db = Database('mydb', env)
 db.put(None)  # Create the database
 db.post({'_id': 'mydoc'})  # Create a document
 .
 Also see Microfiber: https://launchpad.net/microfiber

